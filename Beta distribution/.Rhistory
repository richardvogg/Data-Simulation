here::here()
library(gt)
library(ggplot2)
library(dplyr)
alpha <- c(0.5,1,2,8)
beta <- c(0.5,1,2,8)
combs <- expand.grid(alpha,beta) %>%
rename(alpha=Var1,beta=Var2) %>%
arrange(desc(alpha==beta),desc(alpha<beta)) %>%
filter(!(alpha==0.5&beta>1),!(alpha>1&beta==0.5))
plot_group <- function(alpha,beta){
x <- seq(0,1,0.01)
data <- data.frame(x=x,y=dbeta(x,alpha,beta))
plot_object <- ggplot(data = data, aes(x = x, y = y,group=1)) +
geom_area(color = "#7C7287",fill="goldenrod", size = 8) +
theme_void()
return(plot_object)
}
final <- combs %>%
group_by(alpha,beta) %>%
mutate(plot = purrr::map2(alpha,beta, plot_group))
combs %>%
mutate(ggplot = NA) %>%
gt() %>%
tab_header(title = html("<b>The different faces of the  <br> Beta distribution </b>"),
subtitle = html("Parameter choices for &alpha; and &beta; and corresponding density")) %>%
tab_row_group(group="smaller beta",rows=alpha>beta) %>%
tab_row_group(group="smaller alpha",rows=alpha<beta) %>%
tab_row_group(group="equal alpha and beta",rows=alpha==beta) %>%
#data_color(columns = vars(alpha,beta),
#           colors = c("white","green")) %>%
fmt_number(columns=vars(alpha,beta),decimals = 1,drop_trailing_zeros = TRUE) %>%
cols_label(ggplot = "",alpha=html("&alpha;"),beta=html("&beta;")) %>%
tab_footnote(footnote =  html("f(x;&alpha;,&beta;)=B(&alpha;,&beta;)<sup>-1</sup>x<sup>&alpha;</sup> (1-x)<sup>&beta;</sup>, <br> where the Beta function B is a normalizing constant <br> to ensure that the total probability is 1."),
locations = cells_title(groups="subtitle")) %>%
text_transform(locations = cells_body(columns = vars(ggplot)),
fn = function(x) {purrr::map(final$plot, ggplot_image, height = px(20), aspect_ratio = 5)}) %>%
gtsave("test.html", path = here::here())
combs %>%
mutate(ggplot = NA) %>%
gt() %>%
tab_header(title = html("<b>The different faces of the  <br> Beta distribution </b>"),
subtitle = html("Parameter choices for &alpha; and &beta; and corresponding density")) %>%
tab_row_group(group="smaller beta",rows=alpha>beta) %>%
tab_row_group(group="smaller alpha",rows=alpha<beta) %>%
tab_row_group(group="equal alpha and beta",rows=alpha==beta) %>%
#data_color(columns = vars(alpha,beta),
#           colors = c("white","green")) %>%
fmt_number(columns=vars(alpha,beta),decimals = 1,drop_trailing_zeros = TRUE) %>%
cols_label(ggplot = "",alpha=html("&alpha;"),beta=html("&beta;")) %>%
tab_footnote(footnote =  html("f(x;&alpha;,&beta;)=B(&alpha;,&beta;)<sup>-1</sup>x<sup>&alpha;</sup> (1-x)<sup>&beta;</sup>, <br> where the Beta function B is a normalizing constant <br> to ensure that the total probability is 1."),
locations = cells_title(groups="subtitle")) %>%
text_transform(locations = cells_body(columns = vars(ggplot)),
fn = function(x) {purrr::map(final$plot, ggplot_image, height = px(20), aspect_ratio = 5)}) %>%
gtsave("test.png", path = here::here())
?gtsave
library(tidyr)
library(ggplot2)
data <- data.frame(
normal=rnorm(10000),
uniform=runif(10000),
exponential=rexp(10000),
beta=rbeta(10000,2,1),
logistic=rlogis(10000),
cauchy=rcauchy(10000,scale = 0.01),
gamma=rgamma(10000,shape=2),
log_normal=rlnorm(10000),
weibull=rweibull(10000,shape=2))
data %>%
pivot_longer(everything(),names_to="distribution") %>%
ggplot(aes(x=value))+geom_histogram(aes(fill=distribution))+
facet_wrap(~distribution,scales="free")
data <- data.frame(
normal=rnorm(10000),
uniform=runif(10000),
exponential=rexp(10000),
beta=rbeta(10000,5,2),
logistic=rlogis(10000),
cauchy=rcauchy(10000,scale = 0.01),
gamma=rgamma(10000,shape=2),
log_normal=rlnorm(10000),
weibull=rweibull(10000,shape=2))
data %>%
pivot_longer(everything(),names_to="distribution") %>%
ggplot(aes(x=value))+geom_histogram(aes(fill=distribution))+
facet_wrap(~distribution,scales="free")
data <- data.frame(
normal=rnorm(10000),
uniform=runif(10000),
exponential=rexp(10000),
beta=rbeta(10000,5,2),
logistic=rlogis(10000),
cauchy=rcauchy(10000),
gamma=rgamma(10000,shape=2),
log_normal=rlnorm(10000),
weibull=rweibull(10000,shape=2))
data %>%
pivot_longer(everything(),names_to="distribution") %>%
ggplot(aes(x=value))+geom_histogram(aes(fill=distribution))+
facet_wrap(~distribution,scales="free")
library(tidyr)
library(ggplot2)
### The many faces of the Beta distribution
library(gt)
library(ggplot2)
library(dplyr)
alpha <- c(0.5,1,2,8)
beta <- c(0.5,1,2,8)
combs <- expand.grid(alpha,beta) %>%
rename(alpha=Var1,beta=Var2) %>%
arrange(desc(alpha==beta),desc(alpha<beta)) %>%
filter(!(alpha==0.5&beta>1),!(alpha>1&beta==0.5))
plot_group <- function(alpha,beta){
x <- seq(0,1,0.01)
data <- data.frame(x=x,y=dbeta(x,alpha,beta))
plot_object <- ggplot(data = data, aes(x = x, y = y,group=1)) +
geom_area(color = "#7C7287",fill="goldenrod", size = 8) +
theme_void()
return(plot_object)
}
final <- combs %>%
group_by(alpha,beta) %>%
mutate(plot = purrr::map2(alpha,beta, plot_group))
combs %>%
mutate(ggplot = NA) %>%
gt() %>%
tab_header(title = html("<b>The different faces of the  <br> Beta distribution </b>"),
subtitle = html("Parameter choices for &alpha; and &beta; and corresponding density <br>
bounded between 0 and 1")) %>%
tab_row_group(group="smaller beta",rows=alpha>beta) %>%
tab_row_group(group="smaller alpha",rows=alpha<beta) %>%
tab_row_group(group="equal alpha and beta",rows=alpha==beta) %>%
#data_color(columns = vars(alpha,beta),
#           colors = c("white","green")) %>%
fmt_number(columns=vars(alpha,beta),decimals = 1,drop_trailing_zeros = TRUE) %>%
cols_label(ggplot = "",alpha=html("&alpha;"),beta=html("&beta;")) %>%
tab_footnote(footnote =  html("f(x;&alpha;,&beta;)=B(&alpha;,&beta;)<sup>-1</sup>x<sup>&alpha;</sup> (1-x)<sup>&beta;</sup>, <br> where the Beta function B is a normalizing constant <br> to ensure that the total probability is 1."),
locations = cells_title(groups="subtitle")) %>%
text_transform(locations = cells_body(columns = vars(ggplot)),
fn = function(x) {purrr::map(final$plot, ggplot_image, height = px(20), aspect_ratio = 5)}) %>%
gtsave("test.png", path = here::here())
combs %>%
mutate(ggplot = NA) %>%
gt() %>%
tab_header(title = html("<b>The different faces of the  <br> Beta distribution </b>"),
subtitle = html("Parameter choices for &alpha; and &beta; and corresponding density <br>
bounded between 0 and 1")) %>%
tab_row_group(group="smaller beta",rows=alpha>beta) %>%
tab_row_group(group="smaller alpha",rows=alpha<beta) %>%
tab_row_group(group="equal alpha and beta",rows=alpha==beta) %>%
#data_color(columns = vars(alpha,beta),
#           colors = c("white","green")) %>%
fmt_number(columns=vars(alpha,beta),decimals = 1,drop_trailing_zeros = TRUE) %>%
cols_label(ggplot = "",alpha=html("&alpha;"),beta=html("&beta;")) %>%
tab_footnote(footnote =  html("f(x;&alpha;,&beta;)=B(&alpha;,&beta;)<sup>-1</sup>x<sup>&alpha;</sup> (1-x)<sup>&beta;</sup>, <br> where the Beta function B is a normalizing constant <br> to ensure that the total probability is 1."),
locations = cells_title(groups="subtitle")) %>%
text_transform(locations = cells_body(columns = vars(ggplot)),
fn = function(x) {purrr::map(final$plot, ggplot_image, height = px(20), aspect_ratio = 5)}) %>%
gtsave("index.html", path = here::here())
combs %>%
mutate(ggplot = NA) %>%
gt() %>%
tab_header(title = html("<b>The different faces of the  <br> Beta distribution </b>"),
subtitle = html("Parameter choices for &alpha; and &beta; and corresponding  <br>
density bounded between 0 and 1")) %>%
tab_row_group(group="smaller beta",rows=alpha>beta) %>%
tab_row_group(group="smaller alpha",rows=alpha<beta) %>%
tab_row_group(group="equal alpha and beta",rows=alpha==beta) %>%
#data_color(columns = vars(alpha,beta),
#           colors = c("white","green")) %>%
fmt_number(columns=vars(alpha,beta),decimals = 1,drop_trailing_zeros = TRUE) %>%
cols_label(ggplot = "",alpha=html("&alpha;"),beta=html("&beta;")) %>%
tab_footnote(footnote =  html("f(x;&alpha;,&beta;)=B(&alpha;,&beta;)<sup>-1</sup>x<sup>&alpha;</sup> (1-x)<sup>&beta;</sup>, <br>
where the Beta function B is a normalizing constant <br>
to ensure that the total probability is 1."),
locations = cells_title(groups="subtitle")) %>%
text_transform(locations = cells_body(columns = vars(ggplot)),
fn = function(x) {purrr::map(final$plot, ggplot_image, height = px(20), aspect_ratio = 5)}) %>%
gtsave("index.html", path = here::here())
plot_group(1,1)
plot_group(2,1)
