death,
dummy,
grade_letter,
gender,
sentence
) %>% View()
r_data_frame(n=500,
id,
dob,
animal,
grade, grade,
death,
dummy,
grade_letter,
gender,
sentence
) %>% View()
r_na(cols=c("DOB","Animal","Gender")) %>%
plot(palette = "Set1")
r_data_frame(n=500,
id,
dob,
animal,
grade, grade,
death,
dummy,
grade_letter,
gender,
sentence
) %>%
r_na(cols=c("DOB","Animal","Gender")) %>%
plot(palette = "Set1")
r_data_frame(n=500,
id,
dob,
animal,
grade, grade,
death,
dummy,
grade_letter,
gender,
sentence
) %>%
r_na(cols=c("DOB","Animal","Gender")) %>% View()
r_data_frame(n=500,
id,
dob,
animal,
grade, grade,
death,
dummy,
grade_letter,
gender,
sentence
) %>%
r_na(cols=c("DOB","Animal","Gender")) %>%
plot(palette = "Set1")
r_data_frame(n=500,
id,
dob,
animal,
grade, grade,
death,
dummy,
grade_letter,
gender,
sentence
) %>%
r_na(cols=c("DOB","Animal","Gender")) %>%
table_heat(palette = "Set1")
remotes::install_github("trinker/wakefield")
install.packages("charlatan")
library(charlatan)
ch_job(locale = "de")
ch_job(n=10)
ch_name(n=10)
ch_name(locale=fr_FR,n=10)
ch_name(locale="fr_FR",n=10)
ch_name(locale="de_DE",n=10)
ch_job(locale="de_DE",n=10)
ch_job(locale="fr_FR",n=10)
ch_color_name(n=10)
ch_phone_number(locale="de_DE")
ch_phone_number(locale="de_DE",n=10)
ch_generate(locale="de_DE")
ch_generate(n=10,"name","phone_number")
ch_generate(n=10,"name",ch_phone_number(locale="de_DE"))
ch_generate(n=10,"name","currency","job")
x <- fraudster()
ch_generate(n=10,"name",x$currency(),"job")
set.seed(1234)
locations <- as.data.frame(cbind(ch_lon(n=10),ch_lat(n=10)))
names(locations) <- c("lon", "lat")
leaflet::leaflet(locations) %>% addProviderTiles("Stamen.Watercolor")  %>%
addMarkers(~lon, ~lat)
library(dplyr)
library(leaflet)
leaflet(locations) %>% addProviderTiles("Stamen.Watercolor")  %>%
addMarkers(~lon, ~lat)
locations <- data.frame(lon=ch_lon(n=10),lat=lat(n=10)))
locations <- data.frame(lon=ch_lon(n=10),lat=lat(n=10))
locations <- data.frame(lon=ch_lon(n=10),lat=ch_lat(n=10))
leaflet(locations) %>% addProviderTiles("Stamen.Watercolor")  %>%
addMarkers(~lon, ~lat)
install.packages("corpora")
knitr::opts_chunk$set(echo = TRUE,warning=FALSE,message=FALSE)
library(dplyr)
library(ggplot2)
library(leaflet)
library(rcorpora)
library(rcorpora)
install.packages("rcorpora")
library(rcorpora)
corpora()[1:10]
library(rcorpora)
corpora()[sample(1:100,10)]
library(rcorpora)
length(corpora())
library(rcorpora)
length(corpora())
corpora()[sample(1:293,10)]
corpora("materials/packaging")
corpora("words/states_of_drunkenness")
corpora("foods/pizza_topings")
corpora("foods/pizzaTopings")
corpora("foods/pizzaToppings")
corpora("humans/firstNames")
corpora("humans/descriptions")
tibble(
first_name=corpora("humans/firstNames")$firstNames %>% sample(100),
last_name=corpora("humans/lastNames")$lastNames %>% sample(100),
character1=corpora("humans/descriptions")$descriptions %>% sample(100),
home_country=corpora("geography/countries")$countries %>% sample(100),
favorite_pizza_topping=corpora("foods/pizzaToppings")$pizzaToppings %>% sample(100)
)
tibble(
first_name=corpora("humans/firstNames")$firstNames %>% sample(100,replace=TRUE),
last_name=corpora("humans/lastNames")$lastNames %>% sample(100,replace=TRUE),
character1=corpora("humans/descriptions")$descriptions %>% sample(100,replace=TRUE),
home_country=corpora("geography/countries")$countries %>% sample(100,replace=TRUE),
favorite_pizza_topping=corpora("foods/pizzaToppings")$pizzaToppings %>% sample(100,replace=TRUE)
)
tibble(
first_name=corpora("humans/firstNames")$firstNames %>% sample(100,replace=TRUE),
last_name=corpora("humans/lastNames")$lastNames %>% sample(100,replace=TRUE),
self_description=corpora("humans/descriptions")$descriptions %>% sample(100,replace=TRUE),
home_country=corpora("geography/countries")$countries %>% sample(100,replace=TRUE),
favorite_pizza_topping=corpora("foods/pizzaToppings")$pizzaToppings %>% sample(100,replace=TRUE)
)
corpora("humans/bodyParts")
corpora("instructions/laundry_care)
""
)
"
corpora("instructions/laundry_care")
corpora(""mathematics/trigonometry"")
corpora("mathematics/trigonometry")
corpora("music/instruments")
corpora("mythology/lovecraft")
corpora("technology/computer_sciences")
corpora(""words/emoji/emoji"")
corpora("words/emoji/emoji")
install.packages("fabricatr")
knitr::opts_chunk$set(echo = TRUE,warning=FALSE,message=FALSE)
fabricate(
# five schools
school  = add_level(N = 5,
n_classrooms = sample(10:15, N, replace = TRUE)),
# 10 to 15 classrooms per school
classroom  = add_level(N = n_classrooms),
# 15 students per classroom
student = add_level(N = 15)
)
library(fabricatr)
fabricate(
# five schools
school  = add_level(N = 5,
n_classrooms = sample(10:15, N, replace = TRUE)),
# 10 to 15 classrooms per school
classroom  = add_level(N = n_classrooms),
# 15 students per classroom
student = add_level(N = 15)
)
library(fabricatr)
fabricate(
family  = add_level(N = 5,
n_members = sample(1:12, N, replace = TRUE,prob=12:1)),
#
members  = add_level(N = n_members,
n_accounts = sample(1:5,N,replace=TRUE,prob=(5:1)^2)),
# 15 students per classroom
account = add_level(N = n_accounts)
)
fabricate(
primary_schools = add_level(N = 5, primary_rank = 1:N),
secondary_schools = add_level(N = 6, secondary_rank = 1:N, nest = FALSE),
students = link_levels(N = 15, by = join(primary_rank, secondary_rank, rho = 0.9))
)
fabricate(
primary_schools = add_level(sample(c("A","B","C","D"),6,replace=TRUE)),
secondary_schools = add_level(N = 6, secondary_rank = 1:N, nest = FALSE),
students = link_levels(N = 15, by = join(primary_rank, secondary_rank, rho = 0.9))
)
fabricate(
primary_schools = add_level(N=4, type=sample(c("A","B","C","D"),6,replace=TRUE)),
secondary_schools = add_level(N = 6, secondary_rank = 1:N, nest = FALSE),
students = link_levels(N = 15, by = join(primary_rank, secondary_rank, rho = 0.9))
)
fabricate(
primary_schools = add_level(N=6, type=sample(c("A","B","C","D"),6,replace=TRUE)),
secondary_schools = add_level(N = 6, secondary_rank = 1:N, nest = FALSE),
students = link_levels(N = 15, by = join(primary_rank, secondary_rank, rho = 0.9))
)
fabricate(
age = add_level(N=51, age_opts=1950:2000),
tenure = add_level(N = 20, tenure_opts=1991:2010, nest = FALSE),
students = link_levels(N = 15, by = join(age, tenure, rho = 0.7))
)
fabricate(
age = add_level(N=51, birth_year=1950:2000),
tenure = add_level(N = 20, join_year=1991:2010, nest = FALSE),
students = link_levels(N = 15, by = join(age, tenure, rho = 0.7))
)
df <- fabricate(
age = add_level(N=51, birth_year=1950:2000),
tenure = add_level(N = 20, join_year=1991:2010, nest = FALSE),
client = link_levels(N = 15, by = join(age, tenure, rho = 0.7))
) %>% select(birth_year,join_year,client)
library(dplyr)
library(ggplot2)
library(leaflet)
df <- fabricate(
age = add_level(N=51, birth_year=1950:2000),
tenure = add_level(N = 20, join_year=1991:2010, nest = FALSE),
client = link_levels(N = 15, by = join(age, tenure, rho = 0.7))
fabricate(
age = add_level(N=51, birth_year=1950:2000),
tenure = add_level(N = 20, join_year=1991:2010, nest = FALSE),
client = link_levels(N = 15, by = join(age, tenure, rho = 0.7))
)
df <- fabricate(
age = add_level(N=51, birth_year=1950:2000),
tenure = add_level(N = 20, join_year=1991:2010, nest = FALSE),
client = link_levels(N = 15, by = join(age, tenure, rho = 0.7))
)
View(df)
df <- fabricate(
age = add_level(N=51, birth_year=1950:2000),
tenure = add_level(N = 20, join_year=1991:2010, nest = FALSE),
client = link_levels(N = 15, by = join(age, tenure, rho = 0.7))
) %>%
ggplot(aes(x=birth_year,y=join_year))+geom_point()
fabricate(
age = add_level(N=51, birth_year=1950:2000),
tenure = add_level(N = 20, join_year=1991:2010, nest = FALSE),
client = link_levels(N = 15, by = join(age, tenure, rho = 0.7))
) %>%
ggplot(aes(x=birth_year,y=join_year))+geom_point()
df <- fabricate(
age = add_level(N=51, birth_year=1950:2000),
tenure = add_level(N = 20, join_year=1991:2010, nest = FALSE),
client = link_levels(N = 15, by = join(age, tenure, rho = 0.7))
)
df
df %>% select(client,birth_year,join_year)
knitr::opts_chunk$set(echo = TRUE,warning=FALSE,message=FALSE)
fabricate(
N = 100,
gold_clients = draw_binary(prob = 0.6, N),
standard_clients = draw_ordered(
x = rnorm(N, mean = -1 + 2 * gold_clients),
breaks = c(-1.5, -0.5, 0.5, 1.5),
break_labels = c("Very Unsatisfied", "Unsatisfied", "Neutral",
"Satisfied", "Very Satisfied")
)
)
library(dplyr)
library(ggplot2)
library(leaflet)
library(fabricatr)
fabricate(
N = 100,
gold_clients = draw_binary(prob = 0.6, N),
standard_clients = draw_ordered(
x = rnorm(N, mean = -1 + 2 * gold_clients),
breaks = c(-1.5, -0.5, 0.5, 1.5),
break_labels = c("Very Unsatisfied", "Unsatisfied", "Neutral",
"Satisfied", "Very Satisfied")
)
)
df <- fabricate(
N = 100,
gold_client_flag = draw_binary(prob = 0.3, N),
satisfaction = draw_ordered(
x = rnorm(N, mean = -1 + 2 * gold_clients),
breaks = c(-1.5, -0.5, 0.5, 1.5),
break_labels = c("Very Unsatisfied", "Unsatisfied", "Neutral",
"Satisfied", "Very Satisfied")
)
)
df <- fabricate(
N = 100,
gold_client_flag = draw_binary(prob = 0.3, N),
satisfaction = draw_ordered(
x = rnorm(N, mean = -1 + 2 * gold_client_flag),
breaks = c(-1.5, -0.5, 0.5, 1.5),
break_labels = c("Very Unsatisfied", "Unsatisfied", "Neutral",
"Satisfied", "Very Satisfied")
)
)
df %>% count(gold_client_flag,satisfaction)
df <- fabricate(
N = 100,
gold_client_flag = draw_binary(prob = 0.3, N),
satisfaction = draw_ordered(
x = rnorm(N, mean = -1 + 1.2 * gold_client_flag),
breaks = c(-1.5, -0.5, 0.5, 1.5),
break_labels = c("Very Unsatisfied", "Unsatisfied", "Neutral",
"Satisfied", "Very Satisfied")
)
)
df %>% count(gold_client_flag,satisfaction)
df <- fabricate(
N = 100,
gold_client_flag = draw_binary(prob = 0.3, N),
satisfaction = draw_ordered(
x = rnorm(N, mean = -0.5 + 1.5 * gold_client_flag),
breaks = c(-1.5, -0.5, 0.5, 1.5),
break_labels = c("Very Unsatisfied", "Unsatisfied", "Neutral",
"Satisfied", "Very Satisfied")
)
)
df %>% count(gold_client_flag,satisfaction)
df <- fabricate(
N = 100,
gold_client_flag = draw_binary(prob = 0.3, N),
satisfaction = draw_ordered(
x = rnorm(N, mean = -0.5 + 0.8 * gold_client_flag),
breaks = c(-1.5, -0.5, 0.5, 1.5),
break_labels = c("Very Unsatisfied", "Unsatisfied", "Neutral",
"Satisfied", "Very Satisfied")
)
)
df %>% count(gold_client_flag,satisfaction)
df <- fabricate(
N = 100,
gold_client_flag = draw_binary(prob = 0.3, N),
satisfaction = draw_ordered(
x = rnorm(N, mean = -0.1 + 0.8 * gold_client_flag),
breaks = c(-1.5, -0.5, 0.5, 1.5),
break_labels = c("Very Unsatisfied", "Unsatisfied", "Neutral",
"Satisfied", "Very Satisfied")
)
)
df %>% count(gold_client_flag,satisfaction)
df %>% count(gold_client_flag,satisfaction) %>%
tidyr::pivot_wider(id_cols=satisfaction,names_from="gold_client_flag",values_from="n")
df <- fabricate(
N = 100,
gold_client_flag = draw_binary(prob = 0.3, N),
satisfaction = draw_ordered(
x = rnorm(N, mean = -0.4 + 1.2 * gold_client_flag),
breaks = c(-1.5, -0.5, 0.5, 1.5),
break_labels = c("Very Unsatisfied", "Unsatisfied", "Neutral",
"Satisfied", "Very Satisfied")
)
)
df %>% count(gold_client_flag,satisfaction) %>%
tidyr::pivot_wider(id_cols=satisfaction,names_from="gold_client_flag",values_from="n")
?Distributions
pbirthday(n=100)
pbirthday(n=22)
draw_likert(x=exp(0.001),type=4)
draw_likert(x=exp(100,0.001),type=4)
draw_likert(x=rexp(100,0.001),type=4)
draw_likert(x=rexp(100,0.001),type=4) %>% table()
draw_likert(x=rexp(100,0.001),breaks = c(0.01,0.02,0.05),type=4) %>% table()
draw_likert(x=rexp(100,0.001),breaks = c(0.01,0.02,0.05,1),type=4) %>% table()
draw_likert(x=rexp(100,0.001),breaks = c(0.01,0.02,0.05,1,10),type=4) %>% table()
draw_likert(x=rexp(100,0.001),breaks = c(0,0.02,0.05,1,10),type=4) %>% table()
draw_likert(x=rexp(100,0.001),breaks = c(0,500,1000,5000,10000),type=4) %>% table()
rtlme_model <- fabricate(
N = 1000,
radio_coverage = rlnorm(N, meanlog=0, sdlog=1),
violent_incident_count = draw_count(mean = 1.5 * radio_coverage, N = N)
)
View(rtlme_model)
?draw_count
panel_units <- fabricate(
countries = add_level(
N = 5,
base_gdp = runif(N, 15, 22),
growth_units = runif(N, 0.2, 0.8),
growth_error = runif(N, 0.1, 0.5)
),
years = add_level(
N = 5,
ts_year = 0:4,
gdp_measure = base_gdp + (ts_year * growth_units) + rnorm(N, sd=growth_error)
)
)
View(panel_units)
panel_units <- fabricate(
countries = add_level(
N = 5,
base_gdp = runif(N, 15, 22),
growth_units = runif(N, 0.2, 0.8),
growth_error = runif(N, 0.1, 0.5)
),
years = add_level(
N = 5,
ts_year = 0:4,
gdp_measure = base_gdp + (ts_year * growth_units) + rnorm(N, sd=growth_error)
)
)
panel_units
ggplot(panel_units,aes(x=years,y=gdp_measure,col=countries,group=countries))+geom_line(size=2)
ggplot(panel_units,aes(x=years,y=ts_year,col=countries,group=countries))+geom_line(size=2)
ggplot(panel_units,aes(x=ts_year,y=gdp_measure,col=countries,group=countries))+geom_line(size=2)
panel_units <- fabricate(
countries = add_level(
N = 5,
base_gdp = runif(N, 15, 22),
growth_units = runif(N, 0.2, 0.8),
growth_error = runif(N, 0.1, 0.5)
),
years = add_level(
N = 5,
ts_year = 0:4,
gdp_measure = base_gdp + (ts_year * growth_units) + rnorm(N, sd=growth_error)
)
)
panel_units
panel_units
```{r}
ggplot(panel_units,aes(x=ts_year,y=gdp_measure,col=countries,group=countries))+geom_line(size=2)
panel_global_data <- fabricate(
years = add_level(
N = 5,
ts_year = 0:4,
year_shock = rnorm(N, 0, 0.3)
),
countries = add_level(
N = 5,
base_gdp = runif(N, 15, 22),
growth_units = runif(N, 0.2, 0.5),
growth_error = runif(N, 0.1, 0.5),
nest = FALSE
),
country_years = cross_levels(
by = join(years, countries),
gdp_measure = base_gdp + year_shock + (ts_year * growth_units) +
rnorm(N, sd=growth_error)
)
)
ggplot(panel_units,aes(x=ts_year,y=gdp_measure,col=countries,group=countries))+geom_line(size=2)
ggplot(panel_global_data,aes(x=ts_year,y=gdp_measure,col=countries,group=countries))+geom_line(size=2)
install.packages("GenOrd")
library(GenOrd)
k <- 4 #number of random variables
marginal <- list(0.5, c(1/3,2/3), c(1/4,2/4,3/4), c(1/5,2/5,3/5,4/5))
corrcheck(marginal)
marginal <- list(0.2, c(1/3,2/3), c(1/4,2/4,3/4), c(1/5,2/5,3/5,4/5))
corrcheck(marginal)
Sigma <- matrix(c(1,0.5,0.4,0.3,0.5,1,0.5,0.4,0.4,0.5,1,0.5,0.3,0.4,0.5,1),
k, k, byrow=TRUE)
Sigma <- matrix(c(1,0.5,0.4,0.3,0.5,1,0.5,0.4,0.4,0.5,1,0.5,0.3,0.4,0.5,1),
k, k, byrow=TRUE)
n <- 1000 # sample size
m <- ordsample(n, marginal, Sigma)
head(m)
cor(m)
cumsum(table(m[,4]))/n
str(data.frame(m))
summary(data.frame(m))
marginal <- list(c(0.2,0.4), c(1/3,2/3), c(1/4,2/4,3/4), c(1/5,2/5,3/5,4/5))
corrcheck(marginal)
Sigma <- matrix(c(1,0.5,0.4,0.3,0.5,1,0.5,0.4,0.4,0.5,1,0.5,0.3,0.4,0.5,1),
k, k, byrow=TRUE)
n <- 1000 # sample size
m <- ordsample(n, marginal, Sigma)
head(m)
cor(m)
cumsum(table(m[,4]))/n
cumsum(table(m[,1]))/n
data.frame(m) %>% View()
data.frame(m) %>%
summarise_all(n())
data.frame(m) %>%
summarise_all(count=n())
df <- data.frame(m)
df %>% count(X1)
marginal <- list(c(2,4), c(1/3,2/3), c(1/4,2/4,3/4), c(1/5,2/5,3/5,4/5))
corrcheck(marginal)
marginal <- list(0.6, c(1/3,2/3), c(1/4,2/4,3/4), c(1/5,2/5,3/5,4/5))
corrcheck(marginal)
Sigma <- matrix(c(1,0.5,0.4,0.3,
0.5,1,0.5,0.4,
0.4,0.5,1,0.5,
0.3,0.4,0.5,1),
k, k, byrow=TRUE)
n <- 1000 # sample size
m <- ordsample(n, marginal, Sigma)
df <- data.frame(m)
head(df)
cor(df)
cumsum(table(df[,4]))/n
count(df$X4)
df %>% count(X4)
cor(df)
df %>% count(X4)
df %>% count(X1)
